import {object, array, tuple, literal, TypeOf, z, union} from 'zod';

export const permissionStatusSchema = z.union([
  literal(600),
  literal(601),
  literal(602),
  literal(603),
  literal(604),
  literal(605),
  literal(606),
  literal(607),
  literal(608),
  literal(609),
  literal(610),
  literal(611),
  literal(612),
  literal(613),
  literal(614),
  literal(615),
  literal(616),
  literal(617),
  literal(618),
  literal(619),
  literal(620),
  literal(621),
  literal(622),
  literal(623),
  literal(624),
  literal(625),
  literal(626),
  literal(627),
  literal(628),
  literal(629),
  literal(630),
  literal(631),
  literal(632),
  literal(633),
  literal(634),
  literal(635),
  literal(636),
  literal(637),
  literal(638),
  literal(639),
  literal(640),
  literal(641),
  literal(642),
  literal(643),
  literal(644),
  literal(645),
  literal(646),
  literal(647),
  literal(648),
  literal(649),
  literal(650),
  literal(651),
  literal(652),
  literal(653),
  literal(654),
  literal(655),
  literal(656),
  literal(657),
  literal(658),
  literal(659),
  literal(660),
  literal(661),
  literal(662),
  literal(663),
  literal(664),
  literal(665),
  literal(666),
  literal(667),
  literal(668),
  literal(669),
  literal(670),
  literal(671),
  literal(672),
  literal(673),
  literal(674),
  literal(675),
  literal(676),
  literal(677),
  literal(678),
  literal(679),
  literal(680),
  literal(681),
  literal(682),
  literal(683),
  literal(684),
  literal(685),
  literal(686),
  literal(687),
  literal(688),
  literal(689),
  literal(690),
  literal(691),
  literal(692),
  literal(693),
  literal(694),
  literal(695),
  literal(696),
  literal(697),
  literal(698),
  literal(699),
]);

type Test = z.infer<typeof permissionStatusSchema>;

const ret: Test = 650;
