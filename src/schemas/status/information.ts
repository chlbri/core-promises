import {object, array, tuple, literal, TypeOf, z, union} from 'zod';

export const informationStatusSchema = z.union([
  literal(100),
  literal(101),
  literal(102),
  literal(103),
  literal(104),
  literal(105),
  literal(106),
  literal(107),
  literal(108),
  literal(109),
  literal(110),
  literal(111),
  literal(112),
  literal(113),
  literal(114),
  literal(115),
  literal(116),
  literal(117),
  literal(118),
  literal(119),
  literal(120),
  literal(121),
  literal(122),
  literal(123),
  literal(124),
  literal(125),
  literal(126),
  literal(127),
  literal(128),
  literal(129),
  literal(130),
  literal(131),
  literal(132),
  literal(133),
  literal(134),
  literal(135),
  literal(136),
  literal(137),
  literal(138),
  literal(139),
  literal(140),
  literal(141),
  literal(142),
  literal(143),
  literal(144),
  literal(145),
  literal(146),
  literal(147),
  literal(148),
  literal(149),
  literal(150),
  literal(151),
  literal(152),
  literal(153),
  literal(154),
  literal(155),
  literal(156),
  literal(157),
  literal(158),
  literal(159),
  literal(160),
  literal(161),
  literal(162),
  literal(163),
  literal(164),
  literal(165),
  literal(166),
  literal(167),
  literal(168),
  literal(169),
  literal(170),
  literal(171),
  literal(172),
  literal(173),
  literal(174),
  literal(175),
  literal(176),
  literal(177),
  literal(178),
  literal(179),
  literal(180),
  literal(181),
  literal(182),
  literal(183),
  literal(184),
  literal(185),
  literal(186),
  literal(187),
  literal(188),
  literal(189),
  literal(190),
  literal(191),
  literal(192),
  literal(193),
  literal(194),
  literal(195),
  literal(196),
  literal(197),
  literal(198),
  literal(199),
]);

type Test = z.infer<typeof informationStatusSchema>;

const ret: Test = 150;
