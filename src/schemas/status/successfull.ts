import {object, array, tuple, literal, TypeOf, z, union} from 'zod';

export const successfullStatusSchema = z.union([
  literal(200),
  literal(201),
  literal(202),
  literal(203),
  literal(204),
  literal(205),
  literal(206),
  literal(207),
  literal(208),
  literal(209),
  literal(210),
  literal(211),
  literal(212),
  literal(213),
  literal(214),
  literal(215),
  literal(216),
  literal(217),
  literal(218),
  literal(219),
  literal(220),
  literal(221),
  literal(222),
  literal(223),
  literal(224),
  literal(225),
  literal(226),
  literal(227),
  literal(228),
  literal(229),
  literal(230),
  literal(231),
  literal(232),
  literal(233),
  literal(234),
  literal(235),
  literal(236),
  literal(237),
  literal(238),
  literal(239),
  literal(240),
  literal(241),
  literal(242),
  literal(243),
  literal(244),
  literal(245),
  literal(246),
  literal(247),
  literal(248),
  literal(249),
  literal(250),
  literal(251),
  literal(252),
  literal(253),
  literal(254),
  literal(255),
  literal(256),
  literal(257),
  literal(258),
  literal(259),
  literal(260),
  literal(261),
  literal(262),
  literal(263),
  literal(264),
  literal(265),
  literal(266),
  literal(267),
  literal(268),
  literal(269),
  literal(270),
  literal(271),
  literal(272),
  literal(273),
  literal(274),
  literal(275),
  literal(276),
  literal(277),
  literal(278),
  literal(279),
  literal(280),
  literal(281),
  literal(282),
  literal(283),
  literal(284),
  literal(285),
  literal(286),
  literal(287),
  literal(288),
  literal(289),
  literal(290),
  literal(291),
  literal(292),
  literal(293),
  literal(294),
  literal(295),
  literal(296),
  literal(297),
  literal(298),
  literal(299),
]);

type Test = z.infer<typeof successfullStatusSchema>;

const ret: Test = 250;
